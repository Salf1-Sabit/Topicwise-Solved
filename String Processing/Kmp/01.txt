/**
 *    author: Salfi_Sabit 
 *    created: 08.12.2022 11:51 PM
 *    problem: https://codeforces.com/contest/471/problem/D
**/
#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL 
#include "template/debug.h"
#else 
#define dbg(args...) 
#endif

template <typename T> 
struct kmp {
  int n, m;
  vector<T> s, t;
  vector<T> tab;
  void proc () { 
    int i = 0;
    for (int j = 1; j < m;) { 
      if (t[i] == t[j]) { 
        tab[j] = i + 1;
        i += 1, j += 1;
      } else { 
        if (i) { 
          i = tab[i - 1];
        } else { 
          j += 1;
        }
      }
    }
  }
  kmp (vector<T> s, vector<T> t) {
    this -> s = s;
    this -> t = t;
    n = (T) s.size();
    m = (T) t.size();
    tab.assign(m, 0);
    proc();
  }
  T pos () { 
    int i = 0;
    int j = 0;
    T cnt = 0;
    while (i < n) { 
      if (s[i] == t[j]) { 
        i += 1, j += 1;
      } else { 
        if (j) { 
          j = tab[j - 1];
        } else { 
          i += 1;
        }
      }
      if (j == m - 1) { 
        cnt += 1;
        j = tab[j - 1];
      }
    }
    return cnt;
  }
};

int main() { 
  int n, w;
  scanf("%d %d", &n, &w);
  vector<int> a(n);
  for (auto &x : a) { 
    scanf("%d", &x);
  }
  vector<int> b(w);
  for (auto &x : b) { 
    scanf("%d", &x);
  }
  if (w == 1) { 
    return printf("%d\n" , n), 0;
  }
  vector<int> cpya = a;
  for (int i = 0; i < n - 1; ++i) { 
    cpya[i] = a[i] - a[i + 1];
  }
  vector<int> cpyb = b;
  for (int i = 0; i < w - 1; ++i) { 
    cpyb[i] = b[i] - b[i + 1];
  }
  kmp<int> km(cpya, cpyb);
  auto cnt = km.pos();
  printf("%d\n", cnt);
  dbg("Done\n");
  return 0; 
}